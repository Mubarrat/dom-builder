{"version":3,"file":"html.js","sourceRoot":"./src/","sources":["appendChildren.ts","html.ts","htmlAttributes.ts","htmlItem.ts","proxy.ts","types.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * Helper method to recursively append children to an HTML element.\r\n * @param parent The parent element where the children will be appended.\r\n * @param children The children to be appended in the parent element.\r\n */\r\nfunction appendChildren(parent: HTMLElement | DocumentFragment, ...children: ChildrenType[]) {\r\n\r\n  // Validate children\r\n  if (!isChildrenType(children)) {\r\n\r\n    // let's throw an error.\r\n    throw new Error(\"Invalid children provided\");\r\n  }\r\n\r\n  // Iterate child over children\r\n  for (const child of children) {\r\n\r\n    // Compare type of child\r\n    switch (typeof child) {\r\n\r\n      // Text node\r\n      case \"string\":\r\n      case \"number\":\r\n      case \"boolean\":\r\n\r\n        // Append the text node\r\n        parent.appendChild(document.createTextNode(child.toString()));\r\n        break;\r\n\r\n      // An object\r\n      case \"object\":\r\n\r\n        // Check if child is an array\r\n        if (Array.isArray(child)) {\r\n\r\n          // Array of children, recursively append\r\n          appendChildren(parent, ...child);\r\n        }\r\n\r\n        // Otherwise, The only scope is that the child is HtmlItem\r\n        else {\r\n\r\n          // Append child to the parent element\r\n          parent.appendChild(child.build());\r\n        }\r\n        break;\r\n\r\n      // If anything else\r\n      default:\r\n\r\n        // Convert other types to string and append as text node\r\n        parent.appendChild(document.createTextNode(String(child)));\r\n        break;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * Html class to manage HTML element creation\r\n */\r\nclass Html {\r\n\r\n  /**\r\n   * Array to hold HtmlItem elements\r\n   */\r\n  elements: ChildrenType[];\r\n\r\n  /**\r\n   * Constructor to initialize HtmlItem elements\r\n   * @param elements The elemenets\r\n   */\r\n  constructor(...elements: ChildrenType[]) {\r\n\r\n    // Validate elements\r\n    if (!isChildrenType(elements)) {\r\n      \r\n      // let's throw an error\r\n      throw new Error(\"Invalid elements provided\");\r\n    }\r\n\r\n    // Assign elements\r\n    this.elements = elements;\r\n  }\r\n\r\n  /**\r\n   * Method to build and return a DocumentFragment\r\n   * @returns Returns a DocumentFragment\r\n   */\r\n  build(): DocumentFragment {\r\n\r\n    // Create a DocumentFragment\r\n    const fragment = document.createDocumentFragment();\r\n\r\n    // Recursively append children to the DocumentFragment\r\n    appendChildren(fragment, ...this.elements);\r\n    \r\n    // Return the DocumentFragment\r\n    return fragment;\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * HtmlAttributes class to manage HTML element attributes.\r\n */\r\nclass HtmlAttributes {\r\n  \r\n  /**\r\n   * To initialize attributes for HTML element.\r\n   * @param attributes An set of attributes.\r\n   */\r\n  constructor(public attributes: object = {}) {\r\n\r\n    // Validate attributes as an object\r\n    if (typeof attributes !== \"object\") {\r\n\r\n      // Since attributes aren't validated, let's throw an error.\r\n      throw new Error(\"Invalid attributes provided\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the attribute value by providing it's name.\r\n   * @param attributeName The name of attribute.\r\n   */\r\n  get(attributeName: string) {\r\n\r\n    // Return a attributes value\r\n    return (this.attributes as Record<string, any>)[attributeName];\r\n  }\r\n\r\n  /**\r\n   * Set the attribute value for name.\r\n   * @param attributeName The name of attribute.\r\n   */\r\n  set(attributeName: string, attributeValue: any) {\r\n\r\n    // Set a attributes value\r\n    (this.attributes as Record<string, any>)[attributeName] = attributeValue;\r\n  }\r\n\r\n  /**\r\n   * Method to apply attributes to an HTMLElement.\r\n   * @param element The element to be built.\r\n   * @returns The element is given by.\r\n   */\r\n  build(element: HTMLElement): HTMLElement {\r\n\r\n    // Process and apply attributes to the element\r\n    for (const attr of Object.keys(this.attributes)) {\r\n\r\n      // Get the value from Object\r\n      const value = this.get(attr);\r\n\r\n      // Handle class attribute\r\n      if (attr === 'class') {\r\n\r\n        // Add classes to the element\r\n        element.classList.add(...value.split(' '));\r\n      }\r\n\r\n      // Handle style attribute\r\n      else if (attr === 'style' && typeof value === 'object') {\r\n\r\n        // Merge styles into element's style attribute\r\n        Object.assign(element.style, value);\r\n      }\r\n\r\n      // Assuming 'on' is an object containing event listeners\r\n      else if (attr === 'on' && typeof value === 'object') {\r\n\r\n        // Iterate over events and attach them to the element\r\n        for (const eventName in value) {\r\n\r\n          // Recursively add events\r\n          this.addEvents(element, eventName, value[eventName]);\r\n        }\r\n      }\r\n\r\n      // Handle event listeners\r\n      else if (attr.startsWith('on')) {\r\n\r\n        // Recursively add events\r\n        this.addEvents(element, attr.toLowerCase().substring(2), value);\r\n      }\r\n\r\n      // Assuming 'data' is an object containing data information\r\n      else if (attr === 'data' && typeof value === 'object') {\r\n\r\n        // Iterate over data information\r\n        for (const name in value) {\r\n\r\n          // Define value from name of value\r\n          const data = value[name];\r\n\r\n          // Add data to elements\r\n          element.setAttribute(`data-${name}`,\r\n\r\n            // If data is an object\r\n            typeof data === 'object'\r\n            \r\n            // Stringify it\r\n            ? JSON.stringify(data)\r\n            \r\n            // Otherwise set it as provided\r\n            : data);\r\n        }\r\n      }\r\n\r\n      // Handle other attributes\r\n      else {\r\n\r\n        // Set attributes\r\n        element.setAttribute(attr,\r\n          \r\n          // If value is an object\r\n          typeof value === 'object'\r\n          \r\n          // Stringify it\r\n          ? JSON.stringify(value)\r\n          \r\n          // Otherwise set it as provided\r\n          : value);\r\n      }\r\n    }\r\n\r\n    // Return a element\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Recursively adds events to a given element.\r\n   * @param element The element where events are added.\r\n   * @param eventName The event name of the functions.\r\n   * @param useCapture If you want to use bubbling, then set true. The default is false.\r\n   * @param events The array of functions or functions.\r\n   */\r\n  addEvents(element: HTMLElement, eventName: string, ...events: EventType[]): HtmlAttributes {\r\n    \r\n    // Iterate event over events\r\n    for (const event of events) {\r\n\r\n      // Check if the event is a function\r\n      if (typeof event === 'function') {\r\n\r\n        // Add event listener to the element based on the useCapture parameter\r\n        element.addEventListener(eventName, event);\r\n      }\r\n\r\n      // Check if the event is a function with a option\r\n      else if (isEventWithBubbleType(event)) {\r\n\r\n        // Add event listener to the element based on the useCapture parameter\r\n        element.addEventListener(eventName, event[0], event[1]);\r\n      }\r\n\r\n      // Check if the event is an array\r\n      else if (Array.isArray(event)) {\r\n\r\n        // Recursively add events\r\n        this.addEvents(element, eventName, ...event);\r\n      }\r\n    }\r\n\r\n    // Return this class for chaining\r\n    return this;\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * HtmlItem class representing HTML elements\r\n */\r\nclass HtmlItem {\r\n\r\n  /**\r\n   * Array to hold HTML children\r\n   */\r\n  children: ChildrenType[];\r\n\r\n  /**\r\n   * Object to hold HTML attributes\r\n   */\r\n  attributes: HtmlAttributes;\r\n\r\n  /**\r\n   * Constructor to initialize HtmlItem elements\r\n   * @param tagName Name of the HTML tag\r\n   * @param attributes The attributes of HTML element\r\n   * @param children The children of HTML element\r\n   */\r\n  constructor(public tagName: string, attributes: HtmlAttributes | object = {}, ...children: ChildrenType[]) {\r\n\r\n    // Validate tag name as a non-empty string\r\n    if (!tagName || typeof tagName !== \"string\") {\r\n\r\n      // Since tag name isn't validated, let's throw an error.\r\n      throw new Error(\"Invalid tagName provided\");\r\n    }\r\n\r\n    // Validate attributes as an HtmlAttributes instance or regular object\r\n    if (!(attributes instanceof HtmlAttributes || (attributes && Object.getPrototypeOf(attributes) === Object.prototype))) {\r\n\r\n      // Since attributes aren't validated, let's throw an error.\r\n      throw new Error(\"Invalid attributes provided\");\r\n    }\r\n\r\n    // Validate children\r\n    if (!isChildrenType(children)) {\r\n\r\n      // let's throw an error.\r\n      throw new Error(\"Invalid children provided\");\r\n    }\r\n\r\n    // If 'tagName' contains some spaces front or end, trim it\r\n    tagName = tagName.trim();\r\n\r\n    this.attributes =\r\n\r\n      // If 'attribute' is an instance of HtmlAttributes,\r\n      attributes instanceof HtmlAttributes\r\n\r\n      // just directly assign it\r\n      ? attributes\r\n\r\n      // Otherwise if 'attribute' is a regular object, create an HtmlAttribute instance from it\r\n      : new HtmlAttributes(attributes);\r\n\r\n    // Assign children to this\r\n    this.children = children;\r\n  }\r\n\r\n  /**\r\n   * Method to build and return an HTMLElement.\r\n   * @returns Returns an HTMLElement.\r\n   */\r\n  build(): HTMLElement {\r\n\r\n    // Create the element\r\n    const element = document.createElement(this.tagName);\r\n\r\n    // Apply attributes to the element\r\n    this.attributes.build(element);\r\n\r\n    // Append children recursively to the element\r\n    appendChildren(element, ...this.children);\r\n\r\n    // Return a element\r\n    return element;\r\n  }\r\n}\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n// A function that create global variable to define HtmlItem\r\n(function(globals){\r\n\r\n  // Use strict for this function\r\n  \"use strict\";\r\n\r\n  // Create an instance of the html class with a proxy for element creation.\r\n  globals.$html = new Proxy(Html, {\r\n\r\n    // Assign a get function\r\n    get(target, prop: string) {\r\n\r\n      // If the method name is in this class\r\n      if (prop in target) {\r\n\r\n        // Return the method for invoking\r\n        return (target as any)[prop];\r\n      }\r\n      \r\n      // Method is just a HTML predefined name\r\n      else {\r\n        \r\n        // Fix the method name\r\n        const tagName = prop.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n\r\n        // Convert method call to custom element name\r\n        return function(attributes: HtmlAttributes | object | any, ...children: any[]) {\r\n          \r\n          // If element initialized without attributes\r\n          if (!(attributes instanceof HtmlAttributes || (attributes && Object.getPrototypeOf(attributes) === Object.prototype))) {\r\n\r\n            // Return this class without attributes but as children as they no longer attributes\r\n            return new HtmlItem(tagName, {}, attributes, ...children);\r\n          }\r\n          \r\n          // Otherwise, return this class\r\n          return new HtmlItem(tagName, attributes, ...children);\r\n        };\r\n      }\r\n    },\r\n\r\n    // Assign a apply function\r\n    apply(_target, _thisArg, argArray) {\r\n\r\n      // Return a class that makes Document Fragment\r\n      return new Html(...argArray);\r\n    },\r\n  });\r\n  \r\n}((eval)(\"this\")));\r\n","/**\r\n * MIT License\r\n *\r\n * Copyright (c) 2023 Mubarrat\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n * Recursive type definition for type\r\n */\r\ntype RecuriveType<T> = T | RecuriveType<T>[];\r\n\r\n/**\r\n * Children type definition from recursive type\r\n */\r\ntype ChildrenType = RecuriveType<HtmlItem | string | number | boolean>;\r\n\r\n/**\r\n * Checks that `obj` is children type\r\n * @param obj The object\r\n * @returns obj is ChildrenType\r\n */\r\nfunction isChildrenType(obj: any): obj is ChildrenType {\r\n\r\n  // Returns obj is ChildrenType\r\n  return (\r\n\r\n    // Is `obj` an array\r\n    Array.isArray(obj)\r\n\r\n    // If true, check it's item\r\n    ? obj.every(isChildrenType)\r\n\r\n    // If not, then check obj is an instance of HtmlItem or String or Number or Boolean\r\n    : obj instanceof HtmlItem ||\r\n      obj instanceof String ||\r\n      obj instanceof Number ||\r\n      obj instanceof Boolean\r\n  );\r\n}\r\n\r\n/**\r\n * Event type definition from recursive type\r\n */\r\ntype EventWithBubbleType = [EventListener, boolean | AddEventListenerOptions];\r\n\r\n/**\r\n * Checks that `obj` is EventWithBubbleType\r\n * @param obj The object\r\n * @returns obj is EventWithBubbleType\r\n */\r\nfunction isEventWithBubbleType(obj: any): obj is EventWithBubbleType {\r\n\r\n  // Returns obj is EventWithBubbleType\r\n  return (\r\n\r\n    // Check if obj is an array\r\n    Array.isArray(obj) &&\r\n\r\n    // Check if obj has 2 lengths\r\n    obj.length === 2 &&\r\n\r\n    // Check if the first item is an instance of Function\r\n    obj[0] instanceof Function &&\r\n\r\n    // Check if the second item is a boolean or a AddEventListenerOptions\r\n    (obj[1] instanceof Boolean || isAddEventListenerOptions(obj[1]))\r\n  );\r\n}\r\n\r\n/**\r\n * Check that arg is an AddEventListenerOptions\r\n * @param arg The object to check\r\n * @returns arg is AddEventListenerOptions\r\n */\r\nfunction isAddEventListenerOptions(arg: any): arg is AddEventListenerOptions {\r\n\r\n  // Returns arg is AddEventListenerOptions\r\n  return arg && typeof arg === 'object' && 'capture' in arg;\r\n}\r\n\r\n/**\r\n * Event type definition from recursive type\r\n */\r\ntype EventType = RecuriveType<EventListener | EventWithBubbleType>;\r\n\r\n/**\r\n * Check that obj is an EventType\r\n * @param obj The object to check\r\n * @returns obj is EventType\r\n */\r\nfunction isEventType(obj: any): obj is EventType {\r\n\r\n  // Returns obj is EventType\r\n  return (\r\n\r\n    // Is obj an array?\r\n    Array.isArray(obj)\r\n\r\n    // If true, check it's every item\r\n    ? obj.every(isEventType)\r\n\r\n    // If not, is it a instance of function\r\n    : obj instanceof Function\r\n\r\n    // or a function with a event option\r\n    || isEventWithBubbleType(obj)\r\n  );\r\n}\r\n"]}