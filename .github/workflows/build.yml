name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        id: install_dependencies
        run: npm install
      - name: Build
        id: build
        run: npm run build
      - name: Upload artifact for releasing
        id: upload_artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./build

  release:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Download Artifact
        id: download_artifact
        uses: actions/download-artifcat@v3
        with:
          name: build-artifacts
          path: ./build
      - name: Archive Library
        id: archive_library
        uses: Mubarrat/html-builder@main
        with:
          filename: library.zip
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: Intital Release
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./library.zip
          asset_name: library-v${{ github.run_number }}.zip
          asset_content_type: application/zip
